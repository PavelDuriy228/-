
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.filters import CommandStart
from aiogram.fsm.storage.memory import MemoryStorage
import logging
import asyncio
import config

# –≠–∫–∑–µ–º–ø–ª—è—Ä
bot = Bot(token=config.BOT_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)


start_message2 = "–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –¥–∂—É–Ω–æ–≤ –∏ –º–µ–Ω—Ç–æ—Ä–æ–≤ –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–∞–Ω–¥—ã. –ú—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –ú–µ–Ω—Ç–æ—Ä–∏–Ω–≥ –±–æ—Ç —Å—Ç–∞–Ω–µ—Ç –Ω–µ–∑–∞–º–µ–Ω–∏–º—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã –∏ –ø–æ–≤—ã—à–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º–µ–Ω—Ç–æ—Ä–∏–Ω–≥–∞! \n\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–µ—Ç–µ —Å–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª"
message_for_jun = "üß≠ –ù–∞–π–¥–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å. –ú–µ–Ω—Ç–æ—Ä–∏–Ω–≥ –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–º —Ç—Ä–µ–∫–µ, –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å, –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —ç—Ç–∞–ø—ã –∏ –ø–æ–ª—É—á–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å"
message_for_mentr = "üöÄ –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è —É—Å–ø–µ—Ö–∞. –ú–µ–Ω—Ç–æ—Ä–∏–Ω–≥ –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è –¥–∂—É–Ω–æ–≤. –î–æ–±–∞–≤–ª—è–π—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –Ω–∞–∑–Ω–∞—á–∞–π—Ç–µ –∑–∞–¥–∞—á–∏, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å"
welcome_mentor_message = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ú–µ–Ω—Ç–æ—Ä! –¢–µ–ø–µ—Ä—å –≤–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥—ã –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –±–∞–∑—É –∑–Ω–∞–Ω–∏–π"
ground_of_jun = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í–≤–µ–¥–∏ –∫–æ–¥ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–∑–¥–∞–ª –¥–ª—è —Ç–µ–±—è —Ç–≤–æ–π –º–µ–Ω—Ç–æ—Ä"
messafe_about_of_bot  = "–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –¥–∂—É–Ω–æ–≤ –∏ –º–µ–Ω—Ç–æ—Ä–æ–≤ –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–∞–Ω–¥—ã. \n  –ú—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –ú–µ–Ω—Ç–æ—Ä–∏–Ω–≥ –±–æ—Ç —Å—Ç–∞–Ω–µ—Ç –Ω–µ–∑–∞–º–µ–Ω–∏–º—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã –∏ –ø–æ–≤—ã—à–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º–µ–Ω—Ç–æ—Ä–∏–Ω–≥–∞!"

async def handler_start(message: types.Message):
    tg_channel_btn = InlineKeyboardButton(
        text="–Ø –¥–∂—É–Ω",
        callback_data='jun',
    )
    tg_channel_btn2 = InlineKeyboardButton(
        text="–Ø –º–µ–Ω—Ç–æ—Ä",
        callback_data='mentor',
    )
    row = [tg_channel_btn, tg_channel_btn2]
    rows = [row]
    markup = InlineKeyboardMarkup(inline_keyboard=rows)
    sent_message2 = await message.answer(
        text=start_message2,
        reply_markup=markup,
    )
    return sent_message2.message_id

async def handler_ment(callback_query: CallbackQuery):
    start_button = InlineKeyboardButton(
        text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—á–∞–ª—É",
        callback_data='start',
    )
    continue_btn = InlineKeyboardButton(
        text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
        callback_data='continue_mentor',
    )
    markup = InlineKeyboardMarkup(inline_keyboard=[[start_button, continue_btn]])
    await callback_query.message.answer(message_for_mentr, reply_markup=markup)
    await callback_query.message.delete()  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    await callback_query.answer()


async def handler_jun(callback_query: CallbackQuery):
    start_button = InlineKeyboardButton(
        text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—á–∞–ª—É",
        callback_data='start',
    )
    continue_btn = InlineKeyboardButton(
        text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
        callback_data='continue_jun',
    )
    markup = InlineKeyboardMarkup(inline_keyboard=[[start_button, continue_btn]])
    await callback_query.message.answer(message_for_jun, reply_markup=markup)
    await callback_query.message.delete()  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    await callback_query.answer()
# –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –ú–µ–Ω—Ç–æ—Ä–∞

async def handler_continue_callback_mentor(callback_query: CallbackQuery):
    start_button = InlineKeyboardButton(
        text="–í–µ—Ä–Ω—É—Ç—å—Å—è",
        callback_data='mentor',
    )
    begin_button = InlineKeyboardButton(
        text="–ù–∞—á–∞—Ç—å",
        callback_data='begin_mentor',
    )
    markup = InlineKeyboardMarkup(inline_keyboard=[[start_button, begin_button]])
    await callback_query.message.answer(welcome_mentor_message, reply_markup=markup)
    await callback_query.message.delete()
    await callback_query.answer()

async def handler_begin_mentor(callback_query: CallbackQuery):
    ground_of_command_btn = KeyboardButton(
        text="–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥—ã"
    )
    my_juns_btn = KeyboardButton(
        text="–ú–æ–∏ –¥–∂—É–Ω—ã"
    )
    baza_znanie_btn = KeyboardButton(
        text="–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π"
    )
    my_profile_btn = KeyboardButton(
        text="–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å"
    )
    about_of_bot_btn = KeyboardButton(
        text="–û –±–æ—Ç–µ"
    )
    markup = ReplyKeyboardMarkup(
        keyboard=[
            [ground_of_command_btn],
            [my_juns_btn],
            [baza_znanie_btn],
            [my_profile_btn],
            [about_of_bot_btn]
        ],
        resize_keyboard=True
    )

    await callback_query.message.answer("–ù–∞–∑–æ–≤–∏—Ç–µ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ", reply_markup=markup)
    await callback_query.message.delete()
    await callback_query.answer()

# –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –î–∂—É–Ω–∞
async def handler_continue_callback_jun(callback_query: CallbackQuery):
    ground_of_command_btn = KeyboardButton(
        text="–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥—ã"
    )
    baza_znanie_btn = KeyboardButton(
        text="–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π"
    )
    svyz_s_mentron_btn = KeyboardButton(
        text="–°–≤—è–∑—å —Å –º–µ–Ω—Ç–æ—Ä–æ–º"
    )
    my_profile_btn = KeyboardButton(
        text="–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å"
    )
    about_of_bot_btn = KeyboardButton(
        text="–û –±–æ—Ç–µ"
    )
    markup = ReplyKeyboardMarkup(
        keyboard=[
            [ground_of_command_btn],
            [baza_znanie_btn],
            [svyz_s_mentron_btn],
            [my_profile_btn],
            [about_of_bot_btn]
        ],
        resize_keyboard=True
    )

    await callback_query.message.answer(ground_of_jun, reply_markup=markup)
    await callback_query.message.delete()
    await callback_query.answer()

async def handler_ground_of_command(message: types.Message):
    await message.answer("–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥—ã", reply_markup=ReplyKeyboardRemove())

async def handler_baza_znanie(message: types.Message):
    await message.answer("–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π", reply_markup=ReplyKeyboardRemove())

async def handler_svyz_s_mentron(message: types.Message):
    await message.answer("–°–≤—è–∑—å —Å –º–µ–Ω—Ç–æ—Ä–æ–º", reply_markup=ReplyKeyboardRemove())

async def handler_my_profile(message: types.Message):
    await message.answer("–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", reply_markup=ReplyKeyboardRemove())

# –û –±–æ—Ç–µ
async def handler_about_of_bot(message: types.Message):
    await message.answer("–û –±–æ—Ç–µ", reply_markup=ReplyKeyboardRemove())
    await message.answer(messafe_about_of_bot)
    

async def handler_start_callback(callback_query: CallbackQuery):
    await callback_query.message.delete()  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    await handler_start(callback_query.message)

async def main():
    logging.basicConfig(level=logging.INFO)
    dp.message.register(handler_start, CommandStart())
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–ª—è –º–µ–Ω—Ç—Ä–∞
    dp.callback_query.register(handler_ment, lambda c: c.data == 'mentor')
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–ª—è –¥–∂—É–Ω–∞
    dp.callback_query.register(handler_jun, lambda c: c.data == 'jun')
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
    dp.callback_query.register(handler_start_callback, lambda c: c.data == 'start')
    # –ü—Ä–æ-–≤–æ –º–µ–Ω—Ç–æ—Ä–∞
    dp.callback_query.register(handler_continue_callback_mentor, lambda c: c.data == 'continue_mentor')
    dp.callback_query.register(handler_begin_mentor, lambda c: c.data == 'begin_mentor')
    # –ü—Ä–æ-–≤–æ –¥–∂—É–Ω–∞
    dp.callback_query.register(handler_continue_callback_jun, lambda c: c.data == 'continue_jun')
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä-–≤–∞ –∫–æ–º–∞–Ω–¥—ã
    dp.message.register(handler_ground_of_command, lambda message: message.text == "–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥—ã")
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
    dp.message.register(handler_baza_znanie, lambda message: message.text == "–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π")
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–≤—è–∑–∏ —Å –º–µ–Ω—Ç–æ—Ä–æ–º
    dp.message.register(handler_svyz_s_mentron, lambda message: message.text == "–°–≤—è–∑—å —Å –º–µ–Ω—Ç–æ—Ä–æ–º")
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª—è
    dp.message.register(handler_my_profile, lambda message: message.text == "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ –±–æ—Ç–µ
    dp.message.register(handler_about_of_bot, lambda message: message.text == "–û –±–æ—Ç–µ")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())